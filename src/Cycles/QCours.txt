Ex. 1
Accepter et clôner l’assignment GitHub du TP 3 pour votre groupe (voir ametice pour le lien).

OK

Ex. 2
Créer un nouveau package cycles, dans lequel vous rangerez les classes suivantes

OK

Ex. 3
Soit le diagramme suivant de la figure 1.
Programmer, puis tester, la classe Velo. Les tests seront programmés dans un main directement dans Velo.

OK

Ex. 4
Programmer, puis tester la classe VeloElec dans un main directement dans VeloElec.

OK

Ex. 5
Que signifie “redéfinir une méthode” ?

Lorsqu’on redéfinit une méthode en Java, on écrit dans une classe (ou sous‐classe), une nouvelle version d’une méthode qui existe déjà dans la classe mère (ou super‐classe). On garde le même nom et les mêmes paramètres, mais on change le contenu pour qu’elle se comporte différemment.

Ex. 6
Quelles méthodes de Velo et VeloElec sont redéfinies ?

Dans Velo : 
Dans VeloElec : 
la méthode toString() est redéfinie par rapport à la classe Object
Dans VeloElec : 
la méthode getPuissance(double frequenceCoupsDePedale) est redéfinie par rapport à la version de Velo
La méthode toString() est également redéfinie par rapport à celle héritée de Velo qui elle‐même redéfinissait celle de Object.

Ex. 7
Que signifie l’annotation @Override, placée parfois avant la définition d’une méthode ?

@Override indique que la méthode redéfinit bien une méthode de la super‐classe (même signature), permettant au compilateur de vérifier qu’il n’y a pas d’erreur.

Ex. 8
De manière générale, lorsque l’annotation @Override est pertinente dans le code, qu’apporte sa présence ? Dans ce cas, peut-on s’en dispenser ? Tester

L’annotation @Override facilite la détection d’erreurs de redéfinition et améliore la lisibilité mais elle n’est pas obligatoire.

Ex. 9
Annoter par @Override toutes les méthodes pertinentes, dans les 2 classes.

OK

Ex. 10
Que signifie l’appel super.getPuissane(FrequenceCoupsDePedale) dans la méthode VeloElec.getPuissane() ?

Cela appelle la version de getPuissance() définie dans la classe mère (Velo) pour obtenir la puissance de base avant de la modifier ou de la compléter dans VeloElec.

Ex. 11
Commiter et pusher votre travail.

OK

Ex. 12
Créer un nouveau package tp3exosYaip4. Y ranger les exercices suivants du §4.

OK

Ex. 13
Programmer et tester ex. 4.2 de YAIP.

EN COURS